#!/usr/bin/env ruby
require 'word_handler'
require 'optparse'

options = {}

option_parser = OptionParser.new do | opts |
  
  opts.banner =<< TEXT
  help msg: 
  example:
    wpsword -s on -v 
    wpsword -g -name "xhb" -file "C:\\1.wps"
    wpsword -c write -name "xhb" -msg "hello word"
    wpsword -c close -name "xhb"
    wpsword -s off
  TEXT
  
  option[:visitable] = false
  opts.on('-v', '--visitable', 'set the word visitable') do 
    option[:visitable] = true
  end

  option[:generate] = false
  opts.on('-g', '--generate', 'generate a wps document') do
    option[:generate] = true
  end

  opts.on('-f', '--file', 'specify the file name with full path name') do 
    option[:filename] = value
  end
  
  opts.on('-n', '--name', 'specify a doc name ') do 
    option[:docname] = value
  end

  opts.on('-c', '--cmd', "specify the wps commond: write, read, delete") do
    option[:cmd] = value
  end
  
  opts.on('-m', '--msg', "tell the wpsword write a msg") do 
    option[:msg] = value
  end

  opts.on('-s', '--switch', "a switch to control a wps main process") do 
    option[:switch] = value
  end

end.parse!

word = WPS::Word.new(option[:visitable]) if option[:switch] == "on"
   
word.givedoc("#{option[:docname]}", "#{option[:filename]}") if option[:generate]

word.msg("#{option[:docname]}", "#{option[:msg]}") if optione[:cmd] == "write"

word.closedoc("#{option[:docname]}") if optione[:cmd] == "close"
  
word.close if option[:switch] == "off"


